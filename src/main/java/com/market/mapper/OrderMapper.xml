<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.dao.OrderMapper">
	<resultMap id="BaseResultMap" type="com.market.domain.Order">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="code" jdbcType="VARCHAR" property="code" />
		<result column="status" jdbcType="SMALLINT" property="status" />
		<result column="total_price" jdbcType="DOUBLE" property="totalPrice" />
		<result column="customer_id" jdbcType="VARCHAR" property="customerId" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>

	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from order
		where id = #{id,jdbcType=VARCHAR}
	</delete>

	<insert id="insert" parameterType="com.market.domain.Order">
		insert into order (id, code, status,
		total_price, customer_id, create_time
		)
		values (#{id,jdbcType=VARCHAR}, #{code,jdbcType=VARCHAR},
		#{status,jdbcType=SMALLINT},
		#{totalPrice,jdbcType=DOUBLE}, #{customerId,jdbcType=VARCHAR}, #{createTime,jdbcType=TIMESTAMP}
		)
	</insert>

	<update id="updateByPrimaryKey" parameterType="com.market.domain.Order">
		update order
		set code = #{code,jdbcType=VARCHAR},
		status = #{status,jdbcType=SMALLINT},
		total_price = #{totalPrice,jdbcType=DOUBLE},
		customer_id = #{customerId,jdbcType=VARCHAR},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>

	<select id="selectByPrimaryKey" parameterType="java.lang.String"
		resultMap="BaseResultMap">
		select id, code, status, total_price, customer_id, create_time
		from order
		where id = #{id,jdbcType=VARCHAR}
	</select>

	<select id="selectAll" resultMap="BaseResultMap">
		select id, code, status, total_price, customer_id, create_time
		from order where true
		<if test="customerId != null and customerId != ''">
			and customer_id = #{customerId}::uuid
		</if>
		<if test="status != null and status != ''">
			and status = #{status}
		</if>
		<choose>
			<when test="orderby != null and orderby != ''">
				order by #{orderby}
			</when>
			<otherwise>
				order by create_time desc
			</otherwise>
		</choose>
	</select>

	<select id="selectInPrimaryKeys" resultMap="BaseResultMap">
		select * 
		from "order"
		where "id" in 
		<foreach item="item" index="index" collection="list" open="("  separator="," close=")">
			#{item}::uuid
		</foreach>
	</select>

</mapper>