<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.dao.SalesApplyMapper">

  <resultMap id="BaseResultMap" type="com.market.domain.SalesApply">
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="user_id" jdbcType="VARCHAR" property="userId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="mobile_number" jdbcType="VARCHAR" property="mobileNumber" />
    <result column="comment" jdbcType="VARCHAR" property="comment" />
    <result column="company_id" jdbcType="VARCHAR" property="companyId" />
    <result column="status" jdbcType="SMALLINT" property="status" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="handler_by" jdbcType="VARCHAR" property="handlerBy" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
  </resultMap>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from sales_apply
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  <insert id="insert" parameterType="com.market.domain.SalesApply">
    insert into sales_apply (id, user_id, name, 
      mobile_number, comment, company_id, 
      status, create_time, update_time, 
      handler_by, is_deleted)
    values (#{id,jdbcType=VARCHAR}, #{userId,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR}, 
      #{mobileNumber,jdbcType=VARCHAR}, #{comment,jdbcType=VARCHAR}, #{companyId,jdbcType=VARCHAR}, 
      #{status,jdbcType=SMALLINT}, #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, 
      #{handlerBy,jdbcType=VARCHAR}, #{isDeleted,jdbcType=BIT})
  </insert>
  <update id="updateByPrimaryKey" parameterType="com.market.domain.SalesApply">
    update sales_apply
    set user_id = #{userId,jdbcType=VARCHAR}::uuid,
      name = #{name,jdbcType=VARCHAR},
      mobile_number = #{mobileNumber,jdbcType=VARCHAR},
      comment = #{comment,jdbcType=VARCHAR},
      company_id = #{companyId,jdbcType=VARCHAR}::uuid,
      status = #{status,jdbcType=SMALLINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      handler_by = #{handlerBy,jdbcType=VARCHAR}::uuid,
      is_deleted = #{isDeleted,jdbcType=BIT}
    where id = #{id,jdbcType=VARCHAR}::uuid
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, user_id, name, mobile_number, comment, company_id, status, create_time, 
    update_time, handler_by, is_deleted
    from sales_apply
    where id = #{id,jdbcType=VARCHAR}::uuid
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    select id, user_id, name, mobile_number, comment, company_id, status, create_time, 
    update_time, handler_by, is_deleted
    from sales_apply
  </select>
  <select id="selectByCompany" resultMap="BaseResultMap">
    select * from sales_apply 
    where company_id = #{companyId}::uuid 
    <if test="keyword != null and keyword != ''">
    	and name CONCAT('%',#{keyword},'%') 
    </if>
    limit #{pageSize} offset (#{pageIndex}-1)*#{pageSize}
  </select>
  <select id="selectMany" resultMap="BaseResultMap">
  	select * 
  	from sales_apply
  	where is_deleted != true  
  	<if test="companyId != null and companyId != ''">
  		and companyId = #{companyId}::uuid
  	</if>
  	<if test="status != null">
  		and status in 
	  	<foreach collection="array" item="item" open="(" separator="," close=")">
	  		#{item}
	  	</foreach>
  	</if>
  	<if test="keyword != null and keyword != ''">
  		and name like CONCAT('%',#{keyword},'%')
  	</if>
  	<choose>
  		<when test="orderby != null and orderby != ''">
  			order by #{orderby}
  		</when>
  		<otherwise>
  			order by create_time desc
  		</otherwise>
  	</choose>
  	<if test="pageIndex != null and pageSize != null">
  		limit #{pageSize} offset (#{pageIndex}-1)*#{pageSize}
  	</if>
  </select>
  <select id="selectManyCount" resultType="java.lang.Integer">
  	select count(*) 
  	from sales_apply
  	where is_deleted != true  
  	<if test="companyId != null and companyId != ''">
  		and companyId = #{companyId}::uuid
  	</if>
  	<if test="status != null">
  		and status in 
	  	<foreach collection="array" item="item" open="(" separator="," close=")">
	  		#{item}
	  	</foreach>
  	</if>
  	<if test="keyword != null and keyword != ''">
  		and name like CONCAT('%',#{keyword},'%')
  	</if>
  </select>
  <select id="selectInPrimaryKeys">
  	select * 
  	from sales_apply
  	where id in 
  	<foreach collection="list" item="item" open="(" separator="," close=")">
  		#{item}::uuid
  	</foreach>
  	order by create_time des
  </select>
</mapper>