<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.dao.SalesMapper">

	<resultMap id="BaseResultMap" type="com.market.domain.Sales">
		<id column="id" jdbcType="VARCHAR" property="id" />
		<result column="name" jdbcType="VARCHAR" property="name" />
		<result column="user_id" jdbcType="VARCHAR" property="userId" />
		<result column="company_id" jdbcType="VARCHAR" property="companyId" />
		<result column="mobile_number" jdbcType="VARCHAR" property="mobileNumber" />
		<result column="commision" jdbcType="DOUBLE" property="commision" />
		<result column="freezed_commision" jdbcType="DOUBLE" property="freezedCommision" />
		<result column="status" jdbcType="SMALLINT" property="status" />
		<result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
	</resultMap>
	
	<delete id="deleteByPrimaryKey" parameterType="java.lang.String">
		delete from sales
		where id = #{id,jdbcType=VARCHAR}
	</delete>
	<insert id="insert" parameterType="com.market.domain.Sales">
		insert into sales (id, name, user_id,
		company_id, mobile_number, commision,
		freezed_commision, status, create_time
		)
		values (#{id,jdbcType=VARCHAR}, #{name,jdbcType=VARCHAR},
		#{userId,jdbcType=VARCHAR},
		#{companyId,jdbcType=VARCHAR}, #{mobileNumber,jdbcType=VARCHAR}, #{commision,jdbcType=DOUBLE},
		#{freezedCommision,jdbcType=DOUBLE}, #{status,jdbcType=SMALLINT},
		#{createTime,jdbcType=TIMESTAMP}
		)
	</insert>
	<update id="updateByPrimaryKey" parameterType="com.market.domain.Sales">
		update sales
		set name = #{name,jdbcType=VARCHAR},
		user_id = #{userId,jdbcType=VARCHAR},
		company_id = #{companyId,jdbcType=VARCHAR},
		mobile_number = #{mobileNumber,jdbcType=VARCHAR},
		commision = #{commision,jdbcType=DOUBLE},
		freezed_commision = #{freezedCommision,jdbcType=DOUBLE},
		status = #{status,jdbcType=SMALLINT},
		create_time = #{createTime,jdbcType=TIMESTAMP}
		where id = #{id,jdbcType=VARCHAR}
	</update>
	<select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
		select id, name, user_id, company_id, mobile_number, commision,
		freezed_commision,
		status, create_time
		from sales
		where id = #{id,jdbcType=VARCHAR}::uuid
	</select>
	<select id="selectAll" resultMap="BaseResultMap">
		select id, name, user_id, company_id, mobile_number, commision,
		freezed_commision,
		status, create_time
		from sales
	</select>

	<select id="selectMany" resultMap="BaseResultMap">
		select *
		from sales
		where true
		<if test="companyId != null and companyId != ''">
			and company_id = #{companyId}::uuid
		</if>  
		<if test="status != null">
			status in 
			<foreach collection="array" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="keyword != null and keyword != ''">
			and name CONCAT('%',#{keyword},'%')
		</if>
		<choose>
			<when test="orderby != '' and orderby != null">
				order by #{orderby}
			</when>
			<otherwise>
				order by create_time desc 
			</otherwise>
		</choose>
		<if test="pageIndex != null and pageSize != null">
			limit #{pageSize} offset (#{pageIndex}-1)*#{pageSize} 
		</if>
	</select>
	
	<select id="selectManyCount" resultType="java.lang.Integer">
		select count(*)
		from sales
		where true 
		<if test="companyId != null and companyId != ''">
			and company_id = #{companyId}::uuid
		</if>  
		<if test="status != null">
			status in 
			<foreach collection="array" item="item" open="(" separator="," close=")">
				#{item}
			</foreach>
		</if>
		<if test="keyword != null and keyword != ''">
			and name CONCAT('%',#{keyword},'%')
		</if>
	</select>
	
	<select id="selectInPrimaryKeys" resultMap="BaseResultMap">
		select *
		from sales
		where id in
		<foreach collection="list" item="item" open="(" separator="," close=")">
			#{item}::uuid
		</foreach>
	</select>
	
	
   <select id="selectSalesByCompanyId" parameterType="java.lang.String" resultMap="BaseResultMap">
    select id, name, user_id, company_id, mobile_number, commision, freezed_commision, 
    status, create_time
    from sales
    where company_id = #{company_id,jdbcType=VARCHAR}::uuid
  </select>

</mapper>