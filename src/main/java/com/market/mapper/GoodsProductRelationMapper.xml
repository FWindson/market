<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.market.dao.GoodsProductRelationMapper">
  <resultMap id="BaseResultMap" type="com.market.domain.GoodsProductRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 23:48:33 CST 2017.
    -->
    <id column="id" jdbcType="VARCHAR" property="id" />
    <result column="goods_id" jdbcType="VARCHAR" property="goodsId" />
    <result column="product_id" jdbcType="VARCHAR" property="productId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="is_deleted" jdbcType="BIT" property="isDeleted" />
    <result column="quantity" jdbcType="BIGINT" property="quantity" />
  </resultMap>
  <resultMap id="ProductOfGoodsEditModel" type="com.market.vo.ProductOfGoodsEditModel"></resultMap>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 23:48:33 CST 2017.
    -->
    delete from goods_product_relation
    where id = #{id,jdbcType=VARCHAR}
  </delete>
  
  <insert id="insert" parameterType="com.market.domain.GoodsProductRelation">
    insert into goods_product_relation (id, goods_id, product_id, 
      create_time, is_deleted, quantity)
    values
    <foreach collection="list" item="item" index="index" separator="," >  
        (#{item.id,jdbcType=VARCHAR}::uuid, #{item.goodsId,jdbcType=VARCHAR}::uuid, #{item.productId,jdbcType=VARCHAR}::uuid, 
      	#{item.createTime,jdbcType=TIMESTAMP}, #{item.isDeleted,jdbcType=BIT}, #{item.quantity,jdbcType=BIGINT})
    </foreach>  
  </insert>
  
  <update id="updateByPrimaryKey" parameterType="com.market.domain.GoodsProductRelation">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 23:48:33 CST 2017.
    -->
    update goods_product_relation
    set goods_id = #{goodsId,jdbcType=VARCHAR},
      product_id = #{productId,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      is_deleted = #{isDeleted,jdbcType=BIT},
      quantity = #{quantity,jdbcType=BIGINT}
    where id = #{id,jdbcType=VARCHAR}
  </update>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 23:48:33 CST 2017.
    -->
    select id, goods_id, product_id, create_time, is_deleted, quantity
    from goods_product_relation
    where id = #{id,jdbcType=VARCHAR}
  </select>
  <select id="selectAll" resultMap="BaseResultMap">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Fri Mar 31 23:48:33 CST 2017.
    -->
    select id, goods_id, product_id, create_time, is_deleted, quantity
    from goods_product_relation
  </select>
  <select id="selectProudctsByGoodsId" parameterType="java.lang.String" resultMap="ProductOfGoodsEditModel">
    select p.id,p.name,relation.quantity as quantity 
    from goods_product_relation as relation 
    left join product as p on p.id = product_id 
    where relation.goods_id = #{goodsId,jdbcType=VARCHAR}::uuid and relation.is_deleted != true
  </select>
  <select id="selectByGoodsId" resultMap="BaseResultMap">
    select id, goods_id, product_id, create_time, is_deleted, quantity
    from goods_product_relation 
    where goods_id = #{goodsId}::uuid and is_deleted = false 
  </select>
  <update id="deleteRelation" parameterType="java.util.List">
  		update goods_product_relation 
  		set is_deleted = true 
		where id in 
  	<foreach collection="list" item="item" index="index" open="(" separator="," close=")" >
  		#{item.id}::uuid
  	</foreach>
  </update>
</mapper>